# I would use a variable to allow for menus to have color, but some idiot thought it was a good idea to make variables not persist
# across multiple menus (or "contexts" as they're called). W H Y! I wanted the menus to only have color if the wallpaper failed to
# set properly, but that's not possible apparently. GNU makes me sad sometimes.
echo "[== BOREALOS (starting grub config) ==]"

# Load graphical modules
if [ "${grub_platform}" = "efi" ]; then
    echo "Loading UEFI GOP module..."

    if insmod efi_gop; then
        true
    else
        echo "Failed to load UEFI GOP module, attempting to load UEFI UGA module..."

        if insmod efi_uga; then
            true
        else
            echo "Failed to load UEFI UGA module, attempting to load all video modules..."

            if insmod all_video; then
                true
            else
                echo "Failed to load any UEFI video modules!"
                reboot
            fi
        fi
    fi
else
    echo "Loading BIOS VBE module..."
    
    if insmod vbe; then
        true
    else
        echo "Failed to load VBE module, attempting to load VGA module..."

        if insmod vga; then
            true
        else
            echo "Failed to load VGA module, attempting to load all video modules..."
            
            if insmod all_video; then
                true
            else
                echo "Failed to load any video modules!"
                reboot
            fi
        fi
    fi
fi

# Load all terminal modules
echo "Loading terminal modules..."
insmod gfxterm
insmod font
insmod png

# Configure the graphics mode and autoboot time
set gfxmode=1920x1080,1024x768,800x600auto
set gfxpayload=keep
set timeout=5

# Set the terminal to graphical mode and load the terminus font
echo "Changing to graphical terminal..."
terminal_output gfxterm
loadfont /boot/grub/fonts/Terminus-18.pf2

# Set the menu's backround image
echo "Setting menu background..."
if background_image /boot/grub/images/Wallpaper.png; then
    true
else
    echo "Failed to set menu background!"
fi

echo "Config finished."

# CPU bit number and PAE information (Thanks Giles <http://gilesorr.com/>!)
function cpu_props {
	if cpuid -p; then
		pae_assessment="supports"
	else
		pae_assessment="doesn't support"
	fi
    
	if cpuid -l; then
        cpu_bits="64"
	else
        cpu_bits="32"
	fi

    echo "This machine has a $cpu_bits-bit processor that $pae_assessment PAE."
}

# Menu entries
menuentry "BorealOS" {
    multiboot2 /boot/kernel.elf
    set gfxpayload=keep
    boot
}

submenu "Advanced Options →" {
    menuentry "BorealOS (Custom Resolution)" {
        multiboot2 /boot/kernel.elf
        echo "Enter a resolution (EX: 1024x768):"
        read Resolution
        set gfxpayload=${Resolution}x32,auto
        set gfxmode=${Resolution}x32,auto
        boot
    }

    menuentry "Boot from next device" {
        exit
    }

    # If we booted on a UEFI machine, show options for the UEFI firmware (still often referred to as the BIOS) and the UEFI shell that is packaged in the ISO image
    if [ "${grub_platform}" = "efi" ]; then
        submenu "UEFI →" {
            menuentry "UEFI Firmware Settings" {
                fwsetup
            }

            menuentry "UEFI Shell" {
                insmod chain
                chainloader /shellx64.efi
            }
        }
    fi

    menuentry "Processor Details" {
        cpu_props
        echo $"Press ESC to return to the main menu..."
        sleep --interruptible 9999
    }

    menuentry "Video Details" {
        pager=1
        videoinfo
        echo $"Press ESC to return to the main menu..."
        sleep --interruptible 9999
    }

    menuentry "Bootloader Info" {
        echo "[== BOOTLOADER INFO ==]"
        echo "Bootloader: GNU GRUB ${grub_version}"
        echo "Prefix: $prefix"
        echo "Root device: $root"
        echo $"Press ESC to return to the main menu..."
        sleep --interruptible 9999
    }
}

menuentry "Reboot" {
    reboot
}